preced = [["/",1],["*",1],["+",2],["-",2]]

def precedenceOf(s):
    token = s[0]
    for i in range(len(preced)):
        if token == preced[i][0]:
            return preced[i][0]
    return -1
    
opc = 0
n = input("Entre any expression :- ")
s = list(n)
print(s)

operators = [[0 for col in range(2)] for row in range(10)]
print(operators)

visited = [False]*len(s)
for i in range(len(s)):
    token = s[i]
    for j in range(len(preced)):
        if token == preced[j][0]:
            operators[opc][0] = token 
            operators[opc][1] = i 
            opc += 1
            break
print("\n Operators: \n Operators \t Location number\n ")        
for i in range(opc):
    print(operators[i][0],"\t\t", operators[i][1])
    
for i in range(opc-1,-1,-1):
    for j in range(0,i):
        if(precedenceOf(operators[j][0]) > precedenceOf(operators[j+1][0])):
            temp = operators[j][0]
            operators[j][0] = operators[j+1][0]
            operators[j+1][0] = temp
            temp = operators[j][1]
            operators[j][1] = operators[j+1][1]
            operators[j+1][1] = temp

print("\n Operators sorted in their precedence : \n Operators \t Location number \n")
for i in range(opc):
    print(operators[i][0], "\t\t", operators[i][1])
print("\n")

for i in range(opc):
    j = int(operators[i][1])
    op1 = op2 = ""
    if visited[j-1] == True:
        if precedenceOf(operators[i-1][0]) == precedenceOf(operators[i][0]):
            op1 = "t" + str(i);
        else:
            for x in range(opc):
                if (j-2) == int(operators[x][1]):
                    op1 = "t" + str(x+1) + ""
    else:
        op1 = s[j-1] + ""
    
    if visited[j+1] == True:
        for x in range(opc):
            if (j+2) == int(operators[x][1]):
                op2 = "t" + str(x + 1) + ""
                    
    else:
        op2 = s[j+1] + ""
        print("t"+ str(i+1) + " = ", op1 + str(operators[i][0]) + op2)
        visited[j] = visited[j-1] = visited[j+1] = True
        
        //Input: a*b-c
